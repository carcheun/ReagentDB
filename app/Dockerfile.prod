###########
# BUILDER #
###########

# pull offical base image
FROM python:3.7.9-alpine as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# update apk and install upgrade pip
RUN apk update
RUN python -m pip install --upgrade pip
COPY ./requirements.txt .


# install dependencies
RUN \
 apk add --update busybox-suid vim && \
 apk add --no-cache postgresql-libs && \
 apk add --no-cache --virtual .build-deps gcc musl-dev postgresql-dev && \
 pip wheel  --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels \
 -r requirements.txt && \
 apk --purge del .build-deps

#########
# FINAL #
#########

# pull offical base image
FROM python:3.7.9-alpine

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/reagentdb
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME
RUN chmod u+s /usr/sbin/crond

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/reagentdb/entrypoint.prod.sh"]